// Load shared libraries
@Library('radiant-pipeline-library')_

pipeline {
    agent { label 'master' }

    parameters {
        string(name: 'Box', defaultValue: 'default', description: 'Vagrant Box')
    }    

    stages {
        stage("Destroy VM") {
            steps {
                // Existing VM may or may not exist depending on previous runs
                sh "vagrant destroy -f ${params.Box} || true"
            }
        }
        stage("Setup") {
            steps {    
                sh "vagrant up ${params.Box} --provision-with hoot"
            }
        }
        stage ("Install Previous Version of Hoot") {
            steps {
                sh "vagrant ssh ${params.Box} -c 'sudo yum-config-manager --add-repo https://s3.amazonaws.com/hoot-repo/el7/release/hoot.repo'"
                sh "vagrant ssh ${params.Box} -c 'sudo yum makecache -y'"
                sh "vagrant ssh ${params.Box} -c 'sudo yum -y install hootenanny-autostart-`sudo yum --showduplicates list hootenanny-autostart | tail -n 2 | head -n 1 | awk \'{ print \$2 }\' | sed \'s/-[0-9]*.el7//g\'`'"
                sh "vagrant ssh ${params.Box} -c 'hoot version'"
            }
        }
        stage("Core Test Original Install") {
            steps {
                sh "vagrant ssh ${params.Box} -c 'cd /var/lib/hootenanny; HootTest --diff --glacial --parallel \$(nproc)'"
            }
        }
        stage("Update Hoot") {
            steps {
                sh "vagrant ssh ${params.Box} -c 'sudo mv /var/lib/hootenanny /var/lib/hootenanny.prev'"
                sh "vagrant ssh ${params.Box} -c 'sudo yum -y update hootenanny-autostart'"
                sh "vagrant ssh ${params.Box} -c 'hoot version'"
            }
        }

        stage("Core Test Hoot Updated") {
            steps {
                sh "vagrant ssh ${params.Box} -c 'cd /var/lib/hootenanny/conf/dictionary/; sudo wget https://s3.amazonaws.com/hoot-rpms/support-files/words1.sqlite.bz2'"
                sh "vagrant ssh ${params.Box} -c 'cd /var/lib/hootenanny/conf/dictionary/; sudo bzip2 -d words1.sqlite.bz2'"
                sh "vagrant ssh ${params.Box} -c 'sudo mv /var/lib/hootenanny/conf/dictionary/words1.sqlite /var/lib/hootenanny/conf/dictionary/words.sqlite'"
                sh "vagrant ssh ${params.Box} -c 'cd /var/lib/hootenanny; HootTest --diff --glacial --parallel \$(nproc)'"
            }
        }

    }
    post {
        always {
            script {
                sh "vagrant destroy -f ${params.Box}"
                cleanWs()
            }
        }
    }
}
